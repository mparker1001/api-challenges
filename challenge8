#!/usr/bin/php
<?php
// Thia script will create a static webpage served out of Cloud Files.
// The script will create a new container, cdn enable it, enable it to 
// serve an index file, create an index file object, upload the object 
// to the container, and create a CNAME record pointing to the CDN URL 
// of the container.

// Set container name
$container_name = "foo20";

// Set file name of local index object
$file_index = "index.html";

// Set data in index.html
$index_data = "<h1>This is my CDN index</h1>";

// FQDN of CNAME
$cname_host = "mycdn22.imtesting1this1test2233.com";

// Pull domain name out of fqdn
$fqdn = $cname_host;
$pos = strpos($fqdn, ".co.");
if ($pos === false) {
        preg_match ( "/[^\.\/]+\.[^\.\/]+$/", $fqdn, $domain);
}
else {
        preg_match ( "/[^\.\/]+\.co\.[^\.\/]+$/", $fqdn, $domain);
}
$domain_name =  $domain[0];

// Include function to show CNAME record creation status
function showme($obj) {
        printf("%s %s %s\n", date('H:i:s'), $obj->Status(), $obj->Name());
        if ($obj->Status() == 'ERROR') {
                printf("\tError code [%d] message [%s]\n\tDetails: %s\n",
                $obj->error->code, $obj->error->message, $obj->error->details);
        }
        else if ($obj->Status() == 'COMPLETED') {
                printf("Done\n");
        }
}

// Include required libraries
require('rackspace.php');

// Get credentials and configuration from ~/.rackspace_cloud_credentials
$inifile = $_SERVER['HOME'] . "/.rackspace_cloud_credentials";
define('INIFILE', $inifile);
$ini = parse_ini_file(INIFILE, TRUE);
if (!$ini) {
    printf("Unable to load .ini file [%s]\n", INIFILE);
    exit;
}

// Authenticate
print "Authenticating... ";
$conn = new OpenCloud\Rackspace(
     $ini['Identity']['url'],
     array(
         'username' => $ini['Identity']['username'],
         'tenantName' => $ini['Identity']['tenant'],
         'apiKey' => $ini['Identity']['apiKey'],
     ));
echo "Done!\n";

// Create a Cloud Files (ObjectStore) connection based on configuration in ~/.rackspace_cloud_credentials
$objstore = $conn->ObjectStore($ini['ObjectStore']['serviceName'], $ini['ObjectStore']['region']);

// Check to see if container already exists
$conlist = $objstore->ContainerList(array('prefix'=>$container_name));
$found = FALSE;
while($container = $conlist->Next()) {
	if ( $container->name == $container_name ) {
		echo "Container '" . $container->name . "' found. Skipping container creation...\n";
		$found = TRUE;
		break;
	}
}

// If container was not found, then create it
if ($found === FALSE) {
	echo "Container not found. Creating container '" . $container_name . "'\n";
	$container = $objstore->Container();
	$container->Create(array('name'=>$container_name));
}

// publish it to the CDN
print("Publishing to CDN...\n");
$cdnversion = $container->PublishToCDN();

// Create index file
$fh = fopen($file_index,'w') or die ("Can't open index file for writing");
fwrite ($fh, $index_data);
fclose ($fh);

// load this file into the CDN container
print("Creating CDN object '".$file_index."' into container and setting it as index...\n");
$object = $container->DataObject();
$object->Create(array('name'=>$file_index,'content_type'=>'text/html'), $file_index);

// Set the index for the CDN container
$container->CreateStaticSite($file_index);

// Display URL of public CDN container
printf("CDN Public URL: %s\n", $container->PublicURL());
$cdn_hostname = parse_url($container->PublicURL(),PHP_URL_HOST);

echo "Creating CNAME...\n";

// Create array for domain
$dns = $conn->DNS();
$dlist = $dns->DomainList(array('name'=>$domain_name));

// If the domain is not found, create it and add FQDN record
if ($dlist->Size() == 0) {
        $domain = $dns->Domain(array(
                'name' => $domain_name,
                'ttl' => 3600,
                'emailAddress' => 'ipadmin@stabletransit.com'));
        echo "Domain '" . $domain_name . "' not found. DNS zone will be created.\n";

        $domain->AddRecord($domain->Record(array(
                'type' => 'CNAME',
                'name' => $fqdn,
                'ttl' => 3600,
                'data' => $cdn_hostname)));

        echo "Adding CNAME Record: " . $fqdn . " -> " . $cdn_hostname . "\n";

        $resp = $domain->Create();
}
else {
        //Otherwise echo a message that the domain is found and add FQDN record
        echo "Domain '" . $domain_name . "' found.\n";
        echo "Adding CNAME Record: " . $fqdn . " -> " . $cdn_hostname . "\n";
        $domain = $dlist->Next();
        $new_record = $domain->Record();
        $resp = $new_record->Create(array(
                'type' => 'CNAME',
                'name' => $fqdn,
                'ttl' => 3600,
                'data' => $cdn_hostname));
}

$resp->WaitFor("COMPLETED", 300, 'showme', 1);

echo "CNAME public URL: http://" . $fqdn . "\n";

?>
